<ResourceDictionary x:Class="DLL.Funzioni"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:sys="clr-namespace:System;assembly=mscorlib"
    xmlns:local="clr-namespace:DLL">

    <!--#region FONT -->
    <FontFamily x:Key="fa-solid">K:\SebiAutomation\Source\DLL\SebiGui\font\fa-solid.ttf#Font Awesome 6 Free Solid</FontFamily>
    <FontFamily x:Key="fa-regular">K:\SebiAutomation\Source\DLL\SebiGui\font\fa-regular.ttf#Font Awesome 6 Free Regular</FontFamily>
    <!--#endregion-->

    <!--#region COLORI -->
    <SolidColorBrush x:Key="Blu" Color="CadetBlue"/>
    <!--#endregion-->

    <!--#region BUTTON -->
    <Style TargetType="Button">
        <Setter Property="Border.CornerRadius" Value="3"/>
        <Setter Property="BorderBrush" Value="LightGray"/>

        <Setter Property="FontSize" Value="15"/>
        <Setter Property="FontFamily" Value="Tahoma"/>
        <Setter Property="Padding" Value="5"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border CornerRadius="{TemplateBinding Border.CornerRadius}"
                            BorderThickness="1.8" x:Name="Border"                            
                            BorderBrush="{TemplateBinding BorderBrush}"
                            Background="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(local:Extensions.StandardBackground)}">

                        <ContentPresenter x:Name="ContentPresenter" 
                                        ContentTemplate="{TemplateBinding ContentTemplate}"  
                                          Content="{TemplateBinding Content}"
                                          TextElement.Foreground="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(local:Extensions.StandardForeground)}"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"    
                                          Margin="{TemplateBinding Padding}"                                          
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Border" Property="Background" 
                                    Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(local:Extensions.HoverBackground)}"/>
                            <Setter TargetName="ContentPresenter" Property="TextElement.Foreground"
                                    Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(local:Extensions.HoverForeground)}"/>
                        </Trigger>

                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="Border" Property="Background"
                                    Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(local:Extensions.PressedBackground)}"/>
                            <Setter TargetName="ContentPresenter" Property="TextElement.Foreground"
                                    Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(local:Extensions.PressedForeground)}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>

        </Style.Triggers>
    </Style>
    <!--#endregion-->

    <!--#region TEXTBOX -->
    <Style TargetType="TextBox">
        <Setter Property="Background" Value="White"/>
        <Setter Property="Foreground" Value="Black"/>
        <Setter Property="FontFamily" Value="Tahoma"/>

        <Setter Property="CaretBrush" Value="Black"/>

        <Setter Property="Height" Value="30"/>
        <Setter Property="Width" Value="Auto"/>

        <Setter Property="BorderBrush" Value="DarkGray"/>
        <Setter Property="Border.CornerRadius" Value="3"/>

        <EventSetter Event="GotFocus" Handler="FocusTextBox"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TextBox">
                    <Border BorderThickness="0 0 0 2" BorderBrush="{TemplateBinding BorderBrush}"
                            CornerRadius="{TemplateBinding Border.CornerRadius}" x:Name="bordo">
                        <Border CornerRadius="{TemplateBinding Border.CornerRadius}"                            
                                BorderThickness="1 1 1 0"
                                BorderBrush="Darkgray"
                                Background="{TemplateBinding Background}">

                            <Grid>
                                <TextBox x:Name="tbox" Padding="1 3" BorderThickness="0" VerticalAlignment="Center"
                                             
                                         Text="{Binding RelativeSource={RelativeSource TemplatedParent}, 
                                                        Path=Text, Mode=TwoWay}"
                                         SelectionBrush="CadetBlue"
                                         SelectionOpacity="1"
                                         SelectionTextBrush="White">
                                    <TextBox.Style>
                                        <Style/>
                                    </TextBox.Style>
                                </TextBox>
                            </Grid>
                        </Border>
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsFocused" Value="True" SourceName="tbox">
                            <Setter Property="BorderBrush" Value="CadetBlue" TargetName="bordo"/>
                        </Trigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--#endregion-->

</ResourceDictionary>
